# The user that will be running the server
user root;

# ============================================ #
# EVENTS
# ============================================ #
# Configuration of connection processing

events {

    # The maximum number of simultaneous connections
    worker_connections 1024;
}

# ============================================ #
# HTTP
# ============================================ #
# Configuration of the HTTP server that affects all virtual servers

http {

    # Proxy headers
    # - Sets the host header to the NGINX server
    # - Converts the proxied connection to type Upgrade because WebSockets only communicate on upgraded connections
    # - Ensures the connection header value is Upgrade
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Converts the incoming connection to HTTP 1.1
    proxy_http_version 1.1;

    # Upstream (container) connections
    # - eddysanoli_com
    # - grafana
    upstream docker-eddysanoli {
        server eddysanoli_com:3000;
    }
    upstream docker-grafana {
        server grafana:3200;
    }


    # ============= VIRUTAL SERVER 1 ============= #
    server {

        # Port to listen on (80 is the default HTTP port)
        # Notes:
        # - There can only be one "default_server"
        # - Listen 80 is for IPV4 and [::]:80 is for IPV6
        listen 80 default_server;
        listen [::]:80 default_server;

        # The name of the server
        server_name eddysanoli.com;

        # Route: eddysanoli.com/
        location / {

            # Instructs Nginx to proxy all requests matching the location pattern
            # to the eddysanoli_com container on port 3000
            proxy_pass http://docker-eddysanoli;
            proxy_redirect off;

        }

        # Route: eddysanoli.com/grafana
        location /grafana {

            # Instructs Nginx to proxy all requests matching the location pattern
            # to the grafana container on port 3200
            proxy_pass http://docker-grafana;
            proxy_redirect off;

        }


    }
}